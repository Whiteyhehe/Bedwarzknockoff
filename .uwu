-- Initialize Orion Library
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "Bedwarz Script - Made by synoslucky", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

-- Create the main tab
local MainTab = Window:MakeTab({
    Name = "Main",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Create the misc tab
local MiscTab = Window:MakeTab({
    Name = "Misc",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Variables for cooldown
local cooldown = 0.001

-- Whitelist setup
local whitelist = {"whiteyhsw", "l8rwannabebacon", "monkeyboyou1C2", "mymanuaintwinning"} -- Add whitelisted usernames here

-- Function to check if a player is whitelisted
local function isWhitelisted(player)
    for _, name in pairs(whitelist) do
        if player.Name == name then
            return true
        end
    end
    return false
end

-- Kick the local player if they are not whitelisted
local localPlayer = game:GetService("Players").LocalPlayer
if not isWhitelisted(localPlayer) then
    localPlayer:Kick("You are not whitelisted.")
    return
end

-- Kick non-whitelisted players
game:GetService("Players").PlayerAdded:Connect(function(player)
    if not isWhitelisted(player) then
        player:Kick("You are not whitelisted.")
    end
end)

-- Function to give resources
local givingEmeralds = false
local givingIron = false
local givingDiamonds = false

local function giveResources(resourceType)
    while resourceType == "Emerald" and givingEmeralds or 
          resourceType == "Iron" and givingIron or 
          resourceType == "Diamond" and givingDiamonds do
        local args = {
            [1] = "98F06DF3-417F-4724-8684-B090920322B1",
            [2] = resourceType,
            [3] = true
        }
        game:GetService("ReplicatedStorage").Remotes.DestroyBlock:FireServer(unpack(args))
        wait(cooldown)
    end
end

-- Function to activate kill aura
local killAuraActive = false
local RunService = game:GetService("RunService")
local killAuraConnection

local function startKillAura()
    killAuraConnection = RunService.RenderStepped:Connect(function()
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            if player ~= game:GetService("Players").LocalPlayer and player.Character and not isWhitelisted(player) then
                local args = {
                    [1] = player.Character
                }
                game:GetService("Players").LocalPlayer.Character:FindFirstChild("Wooden Sword").ClientHandler.DetectDamage:FireServer(unpack(args))
            end
        end
    end)
end

local function stopKillAura()
    if killAuraConnection then
        killAuraConnection:Disconnect()
        killAuraConnection = nil
    end
end

-- Function to change walk speed
local function changeWalkSpeed(speed)
    local player = game:GetService("Players").LocalPlayer
    if player and player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
        player.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = speed
    end
end

-- Infinite jump function
local infiniteJumpEnabled = false
local UserInputService = game:GetService("UserInputService")
UserInputService.JumpRequest:Connect(function()
    if infiniteJumpEnabled and game:GetService("Players").LocalPlayer.Character then
        local humanoid = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end)

-- Add toggles to the main tab
MainTab:AddToggle({
    Name = "Give Emerald",
    Default = false,
    Callback = function(value)
        givingEmeralds = value
        if value then
            giveResources("Emerald")
        end
    end
})

MainTab:AddToggle({
    Name = "Give Iron",
    Default = false,
    Callback = function(value)
        givingIron = value
        if value then
            giveResources("Iron")
        end
    end
})

MainTab:AddToggle({
    Name = "Give Diamond",
    Default = false,
    Callback = function(value)
        givingDiamonds = value
        if value then
            giveResources("Diamond")
        end
    end
})

MainTab:AddToggle({
    Name = "Kill Aura",
    Default = false,
    Callback = function(value)
        killAuraActive = value
        if value then
            startKillAura()
        else
            stopKillAura()
        end
    end
})

-- Destroy all beds functionality
local destroyAllBedsActive = false

local function destroyAllBeds()
    while destroyAllBedsActive do
        local args = {
            [1] = workspace.Map.Beds.Bed
        }
        game:GetService("ReplicatedStorage").Remotes.DestroyBed:FireServer(unpack(args))
        wait(1)
    end
end

MainTab:AddToggle({
    Name = "Destroy All Beds",
    Default = false,
    Callback = function(value)
        destroyAllBedsActive = value
        if value then
            destroyAllBeds()
        end
    end
})

-- Add a textbox and toggle to the misc tab for changing walk speed
MiscTab:AddTextbox({
    Name = "Walk Speed",
    Default = "",
    TextDisappear = true,
    Callback = function(value)
        local speed = tonumber(value)
        if speed then
            MiscTab:AddToggle({
                Name = "Activate Walk Speed",
                Default = false,
                Callback = function(toggleValue)
                    if toggleValue then
                        changeWalkSpeed(speed)
                    else
                        changeWalkSpeed(16)  -- Reset to default walk speed
                    end
                end
            })
        end
    end
})

-- Add a toggle for infinite jump to the misc tab
MiscTab:AddToggle({
    Name = "Infinite Jump",
    Default = false,
    Callback = function(value)
        infiniteJumpEnabled = value
    end
})

OrionLib:Init()
