-- Initialize Orion Library
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "Bedwarz Script - Made by synoslucky", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

-- Create the main tab
local MainTab = Window:MakeTab({
    Name = "Main",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Create the misc tab
local MiscTab = Window:MakeTab({
    Name = "Misc",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Variables for cooldown
local cooldown = 0.0000000000000000000000000000001

-- Whitelist setup
local whitelist = {"whiteyhsw", "l8rwannabebacon", "monkeyboyou1C2", "mymanuaintwinning"} -- Add whitelisted usernames here

-- Function to check if a player is whitelisted
local function isWhitelisted(player)
    for _, name in pairs(whitelist) do
        if player.Name == name then
            return true
        end
    end
    return false
end

-- Kick the local player if they are not whitelisted
local localPlayer = game:GetService("Players").LocalPlayer
if not isWhitelisted(localPlayer) then
    localPlayer:Kick("You are not whitelisted.")
    return
end

-- Kick non-whitelisted players
game:GetService("Players").PlayerAdded:Connect(function(player)
    if not isWhitelisted(player) then
        player:Kick("You are not whitelisted.")
    end
end)

-- Function to give resources
local givingEmeralds = false
local givingIron = false
local givingDiamonds = false

local function giveResources(resourceType)
    while resourceType == "Emerald" and givingEmeralds or 
          resourceType == "Iron" and givingIron or 
          resourceType == "Diamond" and givingDiamonds do
        local args = {
            [1] = "98F06DF3-417F-4724-8684-B090920322B1",
            [2] = resourceType,
            [3] = true
        }
        game:GetService("ReplicatedStorage").Remotes.DestroyBlock:FireServer(unpack(args))
        wait(cooldown)
    end
end

-- Function to activate kill aura
local killAuraActive = false
local RunService = game:GetService("RunService")
local killAuraConnection
local range = 10 -- Define the range within which players will be targeted

-- Define the whitelist table
local whitelist = {
    "l8rwannabebacon",
    "monkeyboyou1C2",
    "mymanuaintwinning"
}

-- Function to check if a player is whitelisted
local function isWhitelisted(player)
    for _, name in pairs(whitelist) do
        if player.Name == name then
            return true
        end
    end
    return false
end

local function startKillAura()
    killAuraConnection = RunService.RenderStepped:Connect(function()
        local localPlayer = game:GetService("Players").LocalPlayer
        if not localPlayer.Character then return end
        
        local localPlayerPosition = localPlayer.Character:FindFirstChild("HumanoidRootPart").Position

        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and not isWhitelisted(player) then
                local targetPlayerPosition = player.Character:FindFirstChild("HumanoidRootPart").Position
                local distance = (localPlayerPosition - targetPlayerPosition).Magnitude
                
                if distance <= range then
                    local args = {
                        [1] = player.Character
                    }
                    localPlayer.Character:FindFirstChild("Wooden Sword").ClientHandler.DetectDamage:FireServer(unpack(args))
                end
            end
        end
    end)
end

local function stopKillAura()
    if killAuraConnection then
        killAuraConnection:Disconnect()
        killAuraConnection = nil
    end
end


startKillAura()

-- Function to change walk speed
local function changeWalkSpeed(speed)
    local player = game:GetService("Players").LocalPlayer
    if player and player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
        player.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = speed
    end
end

-- Infinite jump function
local infiniteJumpEnabled = false
local UserInputService = game:GetService("UserInputService")
UserInputService.JumpRequest:Connect(function()
    if infiniteJumpEnabled and game:GetService("Players").LocalPlayer.Character then
        local humanoid = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end)

-- Break All Beds functionality
local breakAllBedsActive = false

local function breakAllBeds()
    spawn(function()
        while breakAllBedsActive do
            for _, bed in pairs(workspace.Map.Beds:GetChildren()) do
                local args = {
                    [1] = bed
                }
                game:GetService("ReplicatedStorage").Remotes.DestroyBed:FireServer(unpack(args))
                wait(0.1) -- Slight delay to avoid overwhelming the server
            end
            wait(0.1)
        end
    end)
end

MainTab:AddToggle({
    Name = "Break All Beds",
    Default = false,
    Callback = function(value)
        breakAllBedsActive = value
        if value then
            breakAllBeds()
        end
    end
})

-- Kill All Players functionality
local killAllPlayersActive = false

local function killAllPlayers()
    spawn(function()
        while killAllPlayersActive do
            for _, player in pairs(game:GetService("Players"):GetPlayers()) do
                if player ~= localPlayer and not isWhitelisted(player) then
                    local args = {
                        [1] = Vector3.new(-0.31077539920806885, 0.00883769616484642, -0.950442373752594),
                        [2] = player.Character,
                        [3] = 1000000000
                    }
                    game:GetService("ReplicatedStorage").Remotes.CrossbowHit:FireServer(unpack(args))
                end
            end
            wait(0.0000000001) -- Cooldown of 0.0000000001 seconds
        end
    end)
end

MainTab:AddToggle({
    Name = "Kill All Players",
    Default = false,
    Callback = function(value)
        killAllPlayersActive = value
        if value then
            killAllPlayers()
        end
    end
})

-- Add toggles to the main tab
MainTab:AddToggle({
    Name = "Give Emerald",
    Default = false,
    Callback = function(value)
        givingEmeralds = value
        if value then
            giveResources("Emerald")
        end
    end
})

MainTab:AddToggle({
    Name = "Give Iron",
    Default = false,
    Callback = function(value)
        givingIron = value
        if value then
            giveResources("Iron")
        end
    end
})

MainTab:AddToggle({
    Name = "Give Diamond",
    Default = false,
    Callback = function(value)
        givingDiamonds = value
        if value then
            giveResources("Diamond")
        end
    end
})

MainTab:AddToggle({
    Name = "Kill Aura",
    Default = false,
    Callback = function(value)
        killAuraActive = value
        if value then
            startKillAura()
        else
            stopKillAura()
        end
    end
})

local numberOfExecutions = 1

-- Textbox to specify the number of executions
MainTab:AddTextbox({
    Name = "Numbers of drop items",
    Default = "1",
    TextDisappear = true,
    Callback = function(value)
        local num = tonumber(value)
        if num then
            numberOfExecutions = num
        else
            numberOfExecutions = 1
        end
    end
})

-- Button to execute the function
MainTab:AddButton({
    Name = "Give Player 3rd Inventory",
    Callback = function()
        for i = 1, numberOfExecutions do
            local args = {
                [1] = "3",
                [2] = "One"
            }
            game:GetService("ReplicatedStorage").Remotes.DropItem:FireServer(unpack(args))
        end
    end
})

local resourceType = ""

-- Textbox to specify the resource type
MainTab:AddTextbox({
    Name = "Resource Type",
    Default = "",
    TextDisappear = true,
    Callback = function(value)
        resourceType = value
    end
})

-- Function to get custom items
local function getCustomItems()
    while customItemsActive do
        local args = {
            [1] = "98F06DF3-417F-4724-8684-B090920322B1",
            [2] = resourceType,
            [3] = true
        }
        game:GetService("ReplicatedStorage").Remotes.DestroyBlock:FireServer(unpack(args))
        wait(cooldown)
    end
end

-- Toggle to activate/deactivate getting custom items
MainTab:AddToggle({
    Name = "Get Custom Items in Shop",
    Default = false,
    Callback = function(value)
        customItemsActive = value
        if value then
            getCustomItems()
        end
    end
})

-- Add a textbox and toggle to the misc tab for changing walk speed
MiscTab:AddTextbox({
    Name = "Walk Speed",
    Default = "",
    TextDisappear = true,
    Callback = function(value)
        local speed = tonumber(value)
        if speed then
            MiscTab:AddToggle({
                Name = "Activate Walk Speed",
                Default = false,
                Callback = function(toggleValue)
                    if toggleValue then
                        changeWalkSpeed(speed)
                    else
                        changeWalkSpeed(16)  -- Reset to default walk speed
                    end
                end
            })
        end
    end
})

-- Add a toggle for infinite jump to the misc tab
MiscTab:AddToggle({
    Name = "Infinite Jump",
    Default = false,
    Callback = function(value)
        infiniteJumpEnabled = value
    end
})

-- Add ESP loadstring to the misc tab
MiscTab:AddButton({
    Name = "ESP",
    Callback = function()
        loadstring(game:HttpGet("https://pastebin.com/raw/iv9qAHZP"))()
    end
})

local UniversalTab = Window:MakeTab({
    Name = "Universal Scripts",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false,
    BorderColor = Color3.fromRGB(128, 128, 128)  -- Gray border
})

-- Add Universal Scripts label
UniversalTab:AddLabel("Universal Scripts")

-- Add Inf Yield script button
UniversalTab:AddButton({
    Name = "Load Inf Yield",
    Callback = function()
        loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Inf-yeild-New-Version-1836"))()
    end
})

-- Add Nameless Admin script button
UniversalTab:AddButton({
    Name = "Load Nameless Admin",
    Callback = function()
        loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Nameless-Admin-Official-15022"))()
    end
})

-- Add Remote Spy script button
UniversalTab:AddButton({
    Name = "Load Remote Spy",
    Callback = function()
        loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Just-A-Script-Rewrite-12363"))()
    end
})

-- Add Fly Mobile script button
UniversalTab:AddButton({
    Name = "Load Fly Mobile",
    Callback = function()
        loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-FLY-GUI-V3-8031"))()
    end
})

local textChatService = game:GetService("TextChatService")
local scriptOwner = "mymanuaintwinning"  -- Define the script owner here

textChatService.OnIncomingMessage = function(message: TextChatMessage)
    
    local properties = Instance.new("TextChatMessageProperties")
    
    if message.TextSource then
        
        local player = game:GetService("Players"):GetPlayerByUserId(message.TextSource.UserId)
        
        if player.Name == scriptOwner then
            properties.PrefixText = "<font color='#00ffee'>[Script Owner]</font> " .. "<font color='#ff8400'>[W Rizz]</font> " .. message.PrefixText
        elseif player == game.Players.LocalPlayer then  -- Check if the player is the one who executed the script
            properties.PrefixText = "<font color='#ff0000'>[Script User]</font> " .. message.PrefixText
        end
        
    end
    
    return properties
    
end

OrionLib:Init()
